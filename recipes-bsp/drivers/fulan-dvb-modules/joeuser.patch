--- a/include/pti_public.h	2018-08-24 14:17:35.291191908 +0200
+++ b/include/pti_public.h	2018-08-24 14:20:39.231739897 +0200
@@ -10,7 +10,7 @@
 	#define NUMBER_OF_DESCRAMBLERS 4
 #else
 	/*quack: 6 is the max for HDBOX maybe other values have to be chosen for other boxes*/
-	#define NUMBER_OF_DESCRAMBLERS 6
+	#define NUMBER_OF_DESCRAMBLERS 9
 #endif
 
 struct PtiSession
@@ -30,6 +30,7 @@
 	int		descramblers[NUMBER_OF_DESCRAMBLERS];
 	int		descramblerindex[32];
 	int		source;
+	int		algo[NUMBER_OF_DESCRAMBLERS];
 };
 
 typedef enum
--- a/player2/linux/drivers/media/dvb/stm/dvb/dvb_ca.c	2018-08-24 14:18:33.826775142 +0200
+++ b/player2/linux/drivers/media/dvb/stm/dvb/dvb_ca.c	2018-08-24 14:24:16.065478336 +0200
@@ -217,6 +217,32 @@
 			return 0;
 			break;
 		}
+		case CA_SET_DESCR_MODE:
+		{
+			ca_descr_mode_t *descr_mode = (ca_descr_mode_t*) Parameter;
+			dprintk("CA_SET_DESCR_MODE\n");
+			if (descr_mode->index >= 16)
+				return -EINVAL;
+			if (descr_mode->algo > 2)
+				return -EINVAL;
+			dprintk("index = %d algo = %d\n", descr_mode->index, descr_mode->algo);
+			if(descr_mode->index < 0 || descr_mode->index >= NUMBER_OF_DESCRAMBLERS){
+				printk("Error descrambler %d not supported! needs to be in range 0 - %d\n", descr_mode->index, NUMBER_OF_DESCRAMBLERS-1);
+				return -1;
+			}
+			if (&Context->DvbContext->Lock != NULL)
+				mutex_lock (&Context->DvbContext->Lock);
+			if (pSession->algo[descr_mode->index] != descr_mode->algo) {
+				printk("Session = %d index = %d new algo = %d\n",pSession->session, descr_mode->index, descr_mode->algo);
+				if (pti_hal_descrambler_set_mode(pSession->session, pSession->descramblers[descr_mode->index], descr_mode->algo) != 0)
+					printk("Error while setting descrambler mode\n");
+				else pSession->algo[descr_mode->index] = descr_mode->algo;
+			}
+			if (&Context->DvbContext->Lock != NULL)
+				mutex_unlock (&Context->DvbContext->Lock);
+			return 0;
+			break;
+		}
 		case CA_SET_DESCR:
 		{
 			ca_descr_t *descr = (ca_descr_t *) Parameter;
--- a/pti/pti_hal.h	2018-08-24 14:25:02.879338264 +0200
+++ b/pti/pti_hal.h	2018-08-24 14:26:51.386695754 +0200
@@ -6,6 +6,7 @@
 
 extern int pti_hal_descrambler_set(int session_handle, int descrambler_handle, u8 *Data, int parity);
 extern int pti_hal_descrambler_set_aes(int session_handle, int descrambler_handle, u8 *Data, int parity, int data_type);
+extern int pti_hal_descrambler_set_mode(int session_handle, int descrambler_handle, enum ca_descr_algo algo);
 extern int pti_hal_descrambler_link(int session_handle, int descrambler_handle, int slot_handle);
 extern int pti_hal_get_new_slot_handle(int session_handle, int dvb_type,
 				       int dvb_pes_type, struct dvb_demux *demux,
--- a/pti/pti_main.c	2018-08-24 14:27:02.457426143 +0200
+++ b/pti/pti_main.c	2018-08-24 14:29:20.370067513 +0200
@@ -44,6 +44,7 @@
 
 #include <linux/dvb/frontend.h>
 #include <linux/dvb/dmx.h>
+#include <linux/dvb/ca.h>
 
 #include "pti.h"
 
@@ -874,6 +875,12 @@
         return 0;
 }
 
+int pti_hal_descrambler_set_mode ( int session_handle, int descrambler_handle,
+			      enum ca_descr_algo algo )
+{
+        return 0;
+}
+
 int pti_hal_descrambler_unlink ( int session_handle, int descrambler_handle )
 {
         return 0;
@@ -1112,6 +1119,7 @@
 
 EXPORT_SYMBOL(pti_hal_descrambler_set);
 EXPORT_SYMBOL(pti_hal_descrambler_set_aes);
+EXPORT_SYMBOL(pti_hal_descrambler_set_mode);
 EXPORT_SYMBOL(pti_hal_descrambler_unlink);
 EXPORT_SYMBOL(pti_hal_descrambler_link);
 EXPORT_SYMBOL(pti_hal_get_new_descrambler);
